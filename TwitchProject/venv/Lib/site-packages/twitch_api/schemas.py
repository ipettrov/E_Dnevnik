from box import Box
from marshmallow import Schema, fields, post_load


class BoxedSchema(Schema):
    @post_load
    def make_box(self, data, **kwargs):
        return Box(data)


class User(BoxedSchema):
    id = fields.Integer(required=True) 
    login = fields.String(required=True)
    display_name = fields.String(required=True)
    type = fields.String(required=True)
    broadcaster_type = fields.String(required=True)
    description = fields.String(required=True)
    profile_image_url = fields.String(required=True)
    offline_image_url = fields.String(required=True)
    view_count = fields.Integer(required=True)
    email = fields.Email(required=False)


class Follow(BoxedSchema):
    from_id = fields.Integer(requied=True)
    from_name = fields.String(required=True)
    to_id = fields.Integer(requied=True)
    to_name = fields.String(requied=True)
    followed_at = fields.DateTime(required=True)
