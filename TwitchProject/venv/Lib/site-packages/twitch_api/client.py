from time import time

import requests

from twitch_api.schemas import Follow, User


class TwitchClient:
    AUTH_URL = "https://id.twitch.tv/oauth2/token"
    API_ROOT = "https://api.twitch.tv/helix/"

    def __init__(self, client_id, client_secret, user_scopes=None):
        """
        API Client Class for interactig with the New Twitch API
        https://dev.twitch.tv/docs/api

        Args:
            client_id (str): application client id
            client_secret (str): application client secret
            user_scopes (list): An optional list of scopes to try and grant
        """
        self._client_id = client_id
        self._client_secret = client_secret
        self._user_scopes = user_scopes or []
        self._auth_dict = {}
        self._auth_headers = {}
        self._last_auth_time = None

        self._client_auth()

    def _client_auth(self):
        """Retrieve Client Auth Token and Resets Last Auth Time"""
        auth_params = {
            "client_id": self._client_id,
            "client_secret": self._client_secret,
            "grant_type": "client_credentials",
            "scope": []
        }
        response = requests.post(self.AUTH_URL, params=auth_params)
        self._auth_dict = response.json()
        self._auth_headers = {
            "Authorization": "Bearer " + self._auth_dict.get('access_token')
        }
        self._last_auth_time = time()

    def _ensure_auth(self):
        """Utility method to renew authentication if needed"""
        time_since_auth = time() - self._last_auth_time
        if time_since_auth >= self._auth_dict.get('expires_in'):
            self._client_auth()

    def get_users(self, user_ids=None, user_logins=None):
        """
        Get a list of User objects with the specified identifiers
        Source Docs: https://dev.twitch.tv/docs/api/reference#get-users

        Args:
            user_ids: (list) A list of id numbers to look users up by
            user_logins: (list) A list of login strings to look users up by

        Returns:
            A list of User objects
        """
        endpoint = "users"

        user_ids = user_ids or []
        user_logins = user_logins or []

        params = {
            "id": user_ids,
            "login": user_logins,
        }

        self._ensure_auth()
        response = requests.get(
            self.API_ROOT + endpoint,
            headers=self._auth_headers,
            params=params
        )

        user_data = response.json()
        user_objs = User(many=True).load(user_data.get("data", []))

        return user_objs

    def get_followers(self, user_id, limit=None, cursor=None):
        """
        Get a list of Follow objects with the specified fields
        Source Docs: https://dev.twitch.tv/docs/api/reference#get-users-follows

        Args:
            user_id: (int) A user id to get follows for
            limit: (int) How many results to limit too ( max 100 )
            cursor: (str) An optional pagination cursor to iterate calls

        Returns:
            A list of Follow objects
        """
        endpoint = "users/follows"
        params = {
            "to_id": user_id,
            "first": limit,
        }

        self._ensure_auth()
        response = requests.get(
            self.API_ROOT + endpoint,
            headers=self._auth_headers,
            params=params
        )

        follow_data = response.json()

        follow_objs = Follow(many=True).load(follow_data.get("data", []))
        total_count = follow_data.get("total")
        cursor = follow_data.get("pagination", {}).get("cursor")

        return follow_objs, total_count, cursor
